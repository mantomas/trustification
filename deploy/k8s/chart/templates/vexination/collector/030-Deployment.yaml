{{ if .Values.vexination.collector.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vexination-collector
  labels:
    app.kubernetes.io/name: vexination-collector
    app.kubernetes.io/component: collector
    app.kubernetes.io/part-of: trustification
spec:
  replicas: {{ .Values.vexination.collector.replicas | default 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: vexination-collector
      app.kubernetes.io/component: collector
      app.kubernetes.io/part-of: trustification
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vexination-collector
        app.kubernetes.io/component: collector
        app.kubernetes.io/part-of: trustification
        metrics: "true"
    spec:
      volumes:
        - name: config
          configMap:
            name: {{ .Values.config.name }}
        - name: guac-config
          configMap:
            name: guac-cm
      containers:
        - image: {{ .Values.guacImage }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          name: service
          command: ["/opt/guac/guacone"]
          args:
            - "collect"
            - "s3"
            - "--s3-bucket"
            - "{{ .Values.vexination.bucket }}"
{{ if .Values.deployMinio }}
            - "--s3-url"
            - "http://minio.{{ .Release.Namespace }}.svc.cluster.local:9000"
{{ else }}
            - "--s3-region"
            - "{{ .Values.region }}"
{{ end }}
            - "--poll"
          workingDir: "/guac"
          env:
            {{ include "trustification.storage-env" ( dict "root" . "config" .Values.vexination ) | nindent 12 }}
            {{ include "trustification.event-bus-env" ( dict "root" . "config" .Values.vexination ) | nindent 12 }}
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.vexination.credentials }}"
                  key: aws_access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.vexination.credentials }}"
                  key: aws_secret_access_key
            - name: AWS_REGION
              value: "{{ .Values.region }}"
          ports:
            - containerPort: 2782
              protocol: TCP
          resources:
            {{- toYaml .Values.vexination.collector.resources | nindent 12 }}
          volumeMounts:
            - name: guac-config
              mountPath: /guac
              readOnly: true
            - mountPath: /etc/config
              name: config
{{ end }}
